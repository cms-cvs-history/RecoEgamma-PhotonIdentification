process PhotonIDProc = 
{
# initialize  MessageLogger
   include "FWCore/MessageLogger/data/MessageLogger.cfi"
   
    source = PoolSource { 
       untracked vstring fileNames ={
          'file:/uscmst1b_scratch/lpc1/lpceg/stilley/CMS_2_0_4/andrew/400QCDpt80-120.root'
       }
    }

  untracked PSet maxEvents = {untracked int32 input = 100}
 
  include "RecoEgamma/PhotonIdentification/data/photonId.cff"
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  include "Geometry/CaloEventSetup/data/CaloTopology.cfi"

  module Out = PoolOutputModule
   { 
     untracked string fileName = "Photest.root"
     
       untracked vstring outputCommands = 
      {
        "drop *",
        "keep edmHepMCProduct_*_*_*",
        "keep recoBasicClusters_*_*_*",
        "keep recoSuperClusters_*_*_*",
	"keep *_PhotonIDProd_*_*",
	"keep *_PhotonIDProd_*_*",
	"keep recoPhotons_*_*_*"
      }	
   }

module photonIDAna = PhotonIDSimpleAnalyzer
  {
   string outputFile = "PhoIDHists.root"

  }


path p = {photonIDSequence, photonIDAna}

endpath e = 
   {
     Out
   }

}
